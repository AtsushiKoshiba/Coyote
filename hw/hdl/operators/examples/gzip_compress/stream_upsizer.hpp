{"payload":{"allShortcutsEnabled":false,"fileTree":{"data_compression/L1/include/hw":{"items":[{"name":"axi_stream_utils.hpp","path":"data_compression/L1/include/hw/axi_stream_utils.hpp","contentType":"file"},{"name":"block_packer.hpp","path":"data_compression/L1/include/hw/block_packer.hpp","contentType":"file"},{"name":"checksum_wrapper.hpp","path":"data_compression/L1/include/hw/checksum_wrapper.hpp","contentType":"file"},{"name":"compress_utils.hpp","path":"data_compression/L1/include/hw/compress_utils.hpp","contentType":"file"},{"name":"fixed_codes.hpp","path":"data_compression/L1/include/hw/fixed_codes.hpp","contentType":"file"},{"name":"huffman_decoder.hpp","path":"data_compression/L1/include/hw/huffman_decoder.hpp","contentType":"file"},{"name":"huffman_encoder.hpp","path":"data_compression/L1/include/hw/huffman_encoder.hpp","contentType":"file"},{"name":"huffman_treegen.hpp","path":"data_compression/L1/include/hw/huffman_treegen.hpp","contentType":"file"},{"name":"inflate.hpp","path":"data_compression/L1/include/hw/inflate.hpp","contentType":"file"},{"name":"kernel_stream_utils.hpp","path":"data_compression/L1/include/hw/kernel_stream_utils.hpp","contentType":"file"},{"name":"lz4_compress.hpp","path":"data_compression/L1/include/hw/lz4_compress.hpp","contentType":"file"},{"name":"lz4_decompress.hpp","path":"data_compression/L1/include/hw/lz4_decompress.hpp","contentType":"file"},{"name":"lz4_packer.hpp","path":"data_compression/L1/include/hw/lz4_packer.hpp","contentType":"file"},{"name":"lz4_specs.hpp","path":"data_compression/L1/include/hw/lz4_specs.hpp","contentType":"file"},{"name":"lz_compress.hpp","path":"data_compression/L1/include/hw/lz_compress.hpp","contentType":"file"},{"name":"lz_decompress.hpp","path":"data_compression/L1/include/hw/lz_decompress.hpp","contentType":"file"},{"name":"lz_optional.hpp","path":"data_compression/L1/include/hw/lz_optional.hpp","contentType":"file"},{"name":"lzx_decompress.hpp","path":"data_compression/L1/include/hw/lzx_decompress.hpp","contentType":"file"},{"name":"mm2s.hpp","path":"data_compression/L1/include/hw/mm2s.hpp","contentType":"file"},{"name":"s2mm.hpp","path":"data_compression/L1/include/hw/s2mm.hpp","contentType":"file"},{"name":"snappy_compress.hpp","path":"data_compression/L1/include/hw/snappy_compress.hpp","contentType":"file"},{"name":"snappy_decompress.hpp","path":"data_compression/L1/include/hw/snappy_decompress.hpp","contentType":"file"},{"name":"snappy_decompress_details.hpp","path":"data_compression/L1/include/hw/snappy_decompress_details.hpp","contentType":"file"},{"name":"stream_downsizer.hpp","path":"data_compression/L1/include/hw/stream_downsizer.hpp","contentType":"file"},{"name":"stream_upsizer.hpp","path":"data_compression/L1/include/hw/stream_upsizer.hpp","contentType":"file"},{"name":"zlib_compress.hpp","path":"data_compression/L1/include/hw/zlib_compress.hpp","contentType":"file"},{"name":"zlib_compress_details.hpp","path":"data_compression/L1/include/hw/zlib_compress_details.hpp","contentType":"file"},{"name":"zlib_specs.hpp","path":"data_compression/L1/include/hw/zlib_specs.hpp","contentType":"file"},{"name":"zlib_tables.hpp","path":"data_compression/L1/include/hw/zlib_tables.hpp","contentType":"file"},{"name":"zstd_compress.hpp","path":"data_compression/L1/include/hw/zstd_compress.hpp","contentType":"file"},{"name":"zstd_compress_internal.hpp","path":"data_compression/L1/include/hw/zstd_compress_internal.hpp","contentType":"file"},{"name":"zstd_compress_multicore.hpp","path":"data_compression/L1/include/hw/zstd_compress_multicore.hpp","contentType":"file"},{"name":"zstd_decompress.hpp","path":"data_compression/L1/include/hw/zstd_decompress.hpp","contentType":"file"},{"name":"zstd_encoders.hpp","path":"data_compression/L1/include/hw/zstd_encoders.hpp","contentType":"file"},{"name":"zstd_fse_decoder.hpp","path":"data_compression/L1/include/hw/zstd_fse_decoder.hpp","contentType":"file"},{"name":"zstd_specs.hpp","path":"data_compression/L1/include/hw/zstd_specs.hpp","contentType":"file"}],"totalCount":36},"data_compression/L1/include":{"items":[{"name":"hw","path":"data_compression/L1/include/hw","contentType":"directory"}],"totalCount":1},"data_compression/L1":{"items":[{"name":"include","path":"data_compression/L1/include","contentType":"directory"},{"name":"meta","path":"data_compression/L1/meta","contentType":"directory"},{"name":"tests","path":"data_compression/L1/tests","contentType":"directory"},{"name":"README.rst","path":"data_compression/L1/README.rst","contentType":"file"}],"totalCount":4},"data_compression":{"items":[{"name":"L1","path":"data_compression/L1","contentType":"directory"},{"name":"L2","path":"data_compression/L2","contentType":"directory"},{"name":"L3","path":"data_compression/L3","contentType":"directory"},{"name":"common","path":"data_compression/common","contentType":"directory"},{"name":"docs","path":"data_compression/docs","contentType":"directory"},{"name":".gitconfig","path":"data_compression/.gitconfig","contentType":"file"},{"name":".gitignore","path":"data_compression/.gitignore","contentType":"file"},{"name":"Jenkinsfile","path":"data_compression/Jenkinsfile","contentType":"file"},{"name":"LICENSE.txt","path":"data_compression/LICENSE.txt","contentType":"file"},{"name":"README.rst","path":"data_compression/README.rst","contentType":"file"},{"name":"library.json","path":"data_compression/library.json","contentType":"file"}],"totalCount":11},"":{"items":[{"name":"blas","path":"blas","contentType":"directory"},{"name":"codec","path":"codec","contentType":"directory"},{"name":"data_analytics","path":"data_analytics","contentType":"directory"},{"name":"data_compression","path":"data_compression","contentType":"directory"},{"name":"database","path":"database","contentType":"directory"},{"name":"dsp","path":"dsp","contentType":"directory"},{"name":"graph","path":"graph","contentType":"directory"},{"name":"hpc","path":"hpc","contentType":"directory"},{"name":"quantitative_finance","path":"quantitative_finance","contentType":"directory"},{"name":"security","path":"security","contentType":"directory"},{"name":"solver","path":"solver","contentType":"directory"},{"name":"sparse","path":"sparse","contentType":"directory"},{"name":"utils","path":"utils","contentType":"directory"},{"name":"vision","path":"vision","contentType":"directory"},{"name":"Jenkinsfile","path":"Jenkinsfile","contentType":"file"},{"name":"LICENSE.txt","path":"LICENSE.txt","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"}],"totalCount":17}},"fileTreeProcessingTime":11.077738,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":210433135,"defaultBranch":"main","name":"Vitis_Libraries","ownerLogin":"Xilinx","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2019-09-23T19:13:46.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/3189299?v=4","public":true,"private":false,"isOrgOwned":true},"refInfo":{"name":"master","listCacheKey":"v0:1688679344.0","canEdit":false,"refType":"branch","currentOid":"a60e1df95fa43e715cc9223f470587456463be8b"},"path":"data_compression/L1/include/hw/stream_upsizer.hpp","currentUser":null,"blob":{"rawLines":["/*"," * (c) Copyright 2019-2022 Xilinx, Inc. All rights reserved."," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *     http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," *"," */","#ifndef _XFCOMPRESSION_STREAM_UPSIZER_HPP_","#define _XFCOMPRESSION_STREAM_UPSIZER_HPP_","","/**"," * @file stream_upsizer.hpp"," * @brief Header for stream upsizer module."," *"," * This file is part of Vitis Data Compression Library."," */","","#include \"compress_utils.hpp\"","#include \"hls_stream.h\"","","#include <ap_int.h>","#include <assert.h>","#include <stdint.h>","","namespace xf {","namespace compression {","namespace details {","","template <int D_WIDTH>","void sendBuffer(hls::stream<IntVectorStream_dt<D_WIDTH, 1> >& inStream,","                hls::stream<ap_uint<D_WIDTH> >& outStream,","                hls::stream<ap_uint<17> >& outSize) {","    bool last = false;","","buffer_top:","    while (!last) {","        last = true;","        ap_uint<17> sizeCntr = 0;","        auto inVal = inStream.read();","        bool loop_continue = (inVal.strobe != 0);","    buffer_main:","        while (loop_continue) {","#pragma HLS PIPELINE II = 1","            last = false;","            loop_continue = (inVal.strobe != 0);","            if (!loop_continue) break;","            outStream << inVal.data[0];","            if (inVal.strobe != 0) {","                inVal = inStream.read();","                sizeCntr++;","            }","        }","        // write out size of up-sized data to terminate the block","        outSize << sizeCntr;","    }","}","","template <int IN_WIDTH, int OUT_WIDTH>","void bufferUpsizer(hls::stream<IntVectorStream_dt<IN_WIDTH, 1> >& inStream,","                   hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                   hls::stream<ap_uint<17> >& outSize) {","    constexpr uint8_t c_upsizeFactor = OUT_WIDTH / IN_WIDTH;","    constexpr uint8_t c_inBytes = IN_WIDTH / 8;","    constexpr uint8_t c_outWidth = OUT_WIDTH;","    ap_uint<c_outWidth> outVal;","    bool last = false;","","buffer_upsizer_top:","    while (!last) {","        last = true;","        int8_t byteIdx = 0;","        ap_uint<17> sizeCntr = 0;","        auto inVal = inStream.read();","        bool loop_continue = (inVal.strobe != 0);","    buffer_upsizer_main:","        while (loop_continue) {","#pragma HLS PIPELINE II = 1","            last = false;","            if (byteIdx == c_upsizeFactor) {","                // append valid bytes count to output packet","                outStream << outVal;","                byteIdx = 0;","                loop_continue = (inVal.strobe != 0);","            }","            outVal >>= IN_WIDTH;","            outVal.range(c_outWidth - 1, c_outWidth - IN_WIDTH) = inVal.data[0];","            ++byteIdx;","            if (inVal.strobe != 0) {","                inVal = inStream.read();","                sizeCntr += c_inBytes;","            }","        }","        // write out size of up-sized data to terminate the block","        outSize << sizeCntr;","    }","}","","template <int IN_WIDTH, int OUT_WIDTH, int BURST_SIZE>","void simpleUpsizer(hls::stream<ap_uint<IN_WIDTH> >& inStream,","                   hls::stream<bool>& inStreamEos,","                   hls::stream<bool>& inFileEos,","                   hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                   hls::stream<bool>& outStreamEos,","                   hls::stream<uint32_t>& outSizeStream) {","    constexpr int c_byteWidth = 8;","    constexpr int c_upsizeFactor = OUT_WIDTH / IN_WIDTH;","    constexpr int c_wordSize = OUT_WIDTH / c_byteWidth;","    constexpr int c_size = BURST_SIZE * c_wordSize;","","    while (1) {","        bool eosFile = inFileEos.read();","        if (eosFile == true) break;","","        ap_uint<OUT_WIDTH> outBuffer = 0;","        uint32_t byteIdx = 0;","        uint16_t sizeWrite = 0;","        bool eos_flag = false;","    stream_upsizer:","        do {","#pragma HLS PIPELINE II = 1","            if (byteIdx == c_upsizeFactor) {","                outStream << outBuffer;","                outStreamEos << false;","                sizeWrite++;","                if (sizeWrite == BURST_SIZE) {","                    outSizeStream << c_size;","                    sizeWrite = 0;","                }","                byteIdx = 0;","            }","            ap_uint<IN_WIDTH> inValue = inStream.read();","            eos_flag = inStreamEos.read();","            outBuffer.range((byteIdx + 1) * IN_WIDTH - 1, byteIdx * IN_WIDTH) = inValue;","            byteIdx++;","        } while (eos_flag == false);","","        if (byteIdx && (eosFile == false)) {","            outStream << outBuffer;","            outStreamEos << true;","            sizeWrite++;","            outSizeStream << (sizeWrite * c_wordSize);","        }","    }","    outSizeStream << 0;","}","","template <int IN_WIDTH, int OUT_WIDTH>","void simpleStreamUpsizer(hls::stream<ap_uint<IN_WIDTH> >& inStream,","                         hls::stream<bool>& inStreamEos,","                         hls::stream<uint32_t>& inSizeStream,","                         hls::stream<bool>& inFileEos,","                         hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                         hls::stream<bool>& outStreamEos,","                         hls::stream<ap_uint<4> >& outSizeStream) {","    constexpr int c_byteWidth = 8;","    constexpr int c_upsizeFactor = OUT_WIDTH / IN_WIDTH;","    constexpr int factor = IN_WIDTH / 8;","    uint32_t upsizerCntr = 0;","","    while (1) {","        bool eosFile = inFileEos.read();","        if (eosFile == true) break;","","        ap_uint<OUT_WIDTH> outBuffer = 0;","        uint8_t byteIdx = 0;","        uint32_t readSize = 0;","        bool eos_flag = false;","    stream_upsizer:","        do {","#pragma HLS PIPELINE II = 1","            if (byteIdx == c_upsizeFactor) {","                readSize += byteIdx * factor;","                outSizeStream << (byteIdx * factor);","                outStream << outBuffer;","                outStreamEos << false;","                byteIdx = 0;","            }","            ap_uint<IN_WIDTH> inValue = inStream.read();","            eos_flag = inStreamEos.read();","            outBuffer.range((byteIdx + 1) * IN_WIDTH - 1, byteIdx * IN_WIDTH) = inValue;","            byteIdx++;","        } while (eos_flag == false);","","        uint32_t blockSize = inSizeStream.read();","        uint8_t leftBytes = blockSize - readSize;","","        if (byteIdx && (eosFile == false)) {","            outSizeStream << leftBytes;","            outStream << outBuffer;","            outStreamEos << false;","        }","        // send dummy data to indicate end of each block","        outSizeStream << 0;","        outStream << 0;","        outStreamEos << 0;","    }","","    outSizeStream << 0;","    outStream << 0;","    outStreamEos << 1;","}","","template <int IN_WIDTH, int OUT_WIDTH, int SIZE_DWIDTH = 4>","void simpleStreamUpsizer(hls::stream<IntVectorStream_dt<8, IN_WIDTH / 8> >& inStream,","                         hls::stream<ap_uint<OUT_WIDTH + SIZE_DWIDTH> >& outStream) {","    constexpr uint8_t c_upsizeFactor = OUT_WIDTH / IN_WIDTH;","    constexpr uint8_t c_inBytes = IN_WIDTH / 8;","    ap_uint<IN_WIDTH> inVal;","    ap_uint<OUT_WIDTH> outVal;","    bool last = false;","    ap_uint<4> dsize;","","stream_upsizer_top:","    while (!last) {","        last = true;","        uint8_t byteIdx = 0;","        dsize = 0;","        auto inStVal = inStream.read();","        bool loop_continue = (inStVal.strobe != 0);","    stream_upsizer_main:","        while (loop_continue) {","#pragma HLS PIPELINE II = 1","            last = false;","            if (byteIdx == c_upsizeFactor) {","                ap_uint<SIZE_DWIDTH + OUT_WIDTH> tmpVal = outVal;","                tmpVal <<= SIZE_DWIDTH;","                tmpVal.range(SIZE_DWIDTH - 1, 0) = dsize;","                outStream << tmpVal;","                byteIdx = 0;","                dsize = 0;","                loop_continue = (inStVal.strobe != 0);","            }","        upszr_assign_input:","            for (uint8_t b = 0; b < c_inBytes; ++b) {","#pragma HLS UNROLL","#pragma HLS LOOP_TRIPCOUNT min = 0 max = c_inBytes","                if (b < inStVal.strobe) inVal.range(((b + 1) * 8) - 1, b * 8) = inStVal.data[b];","            }","            outVal >>= IN_WIDTH;","            outVal.range(OUT_WIDTH - 1, OUT_WIDTH - IN_WIDTH) = inVal;","            ++byteIdx;","            dsize += inStVal.strobe;","            if (inStVal.strobe != 0) inStVal = inStream.read();","        }","        // end of block/files","        outStream << 0;","    }","}","","template <class SIZE_DT, int IN_WIDTH, int OUT_WIDTH>","void streamUpsizer(hls::stream<ap_uint<IN_WIDTH> >& inStream,","                   hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                   SIZE_DT original_size) {","    /**","     * @brief This module reads IN_WIDTH from the input stream and accumulate","     * the consecutive reads until OUT_WIDTH and writes the OUT_WIDTH data to","     * output stream","     *","     * @tparam SIZE_DT stream size class instance","     * @tparam IN_WIDTH input data width","     * @tparam OUT_WIDTH output data width","     *","     * @param inStream input stream","     * @param outStream output stream","     * @param original_size original stream size","     */","","    if (original_size == 0) return;","","    uint8_t paralle_byte = IN_WIDTH / 8;","    ap_uint<OUT_WIDTH> shift_register;","    uint8_t factor = OUT_WIDTH / IN_WIDTH;","    original_size = (original_size - 1) / paralle_byte + 1;","    uint32_t withAppendedDataSize = (((original_size - 1) / factor) + 1) * factor;","","    for (uint32_t i = 0; i < withAppendedDataSize; i++) {","#pragma HLS PIPELINE II = 1","        if (i != 0 && i % factor == 0) {","            outStream << shift_register;","            shift_register = 0;","        }","        if (i < original_size) {","            shift_register.range(OUT_WIDTH - 1, OUT_WIDTH - IN_WIDTH) = inStream.read();","        } else {","            shift_register.range(OUT_WIDTH - 1, OUT_WIDTH - IN_WIDTH) = 0;","        }","        if ((i + 1) % factor != 0) shift_register >>= IN_WIDTH;","    }","    // write last data to stream","    outStream << shift_register;","}","","template <int IN_WIDTH, int OUT_WIDTH>","void upsizerEos(hls::stream<ap_uint<IN_WIDTH> >& inStream,","                hls::stream<bool>& inStream_eos,","                hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                hls::stream<bool>& outStream_eos) {","    /**","     * @brief This module reads IN_WIDTH data from input stream based","     * on end of stream and accumulate the consecutive reads until","     * OUT_WIDTH and then writes OUT_WIDTH data to output stream.","     *","     * @tparam IN_WIDTH input data width","     * @tparam OUT_WIDTH output data width","     *","     * @param inStream input stream","     * @param inStream_eos input end of stream flag","     * @param outStream output stream","     * @param outStream_eos output end of stream flag","     */","    // Constants","    const int c_byteWidth = IN_WIDTH;","    const int c_upsizeFactor = OUT_WIDTH / c_byteWidth;","    const int c_inSize = IN_WIDTH / c_byteWidth;","","    ap_uint<OUT_WIDTH> outBuffer = 0;","    ap_uint<IN_WIDTH> outBuffer_int[c_upsizeFactor];","#pragma HLS array_partition variable = outBuffer_int dim = 1 complete","    uint32_t byteIdx = 0;","    bool done = false;","    ////printme(\"%s: reading next data=%d outSize=%d c_inSize=%d\\n \",__FUNCTION__, size,outSize,c_inSize);","    outBuffer_int[byteIdx] = inStream.read();","stream_upsizer:","    for (bool eos_flag = inStream_eos.read(); eos_flag == false; eos_flag = inStream_eos.read()) {","#pragma HLS PIPELINE II = 1","        for (int j = 0; j < c_upsizeFactor; j += c_inSize) {","#pragma HLS unroll","            outBuffer.range((j + 1) * c_byteWidth - 1, j * c_byteWidth) = outBuffer_int[j];","        }","        byteIdx += 1;","        ////printme(\"%s: value=%c, chunk_size = %d and byteIdx=%d\\n\",__FUNCTION__,(char)tmpValue, chunk_size,byteIdx);","        if (byteIdx >= c_upsizeFactor) {","            outStream << outBuffer;","            outStream_eos << 0;","            byteIdx -= c_upsizeFactor;","        }","        outBuffer_int[byteIdx] = inStream.read();","    }","","    if (byteIdx) {","        outStream_eos << 0;","        outStream << outBuffer;","    }","    // end of block","","    outStream << 0;","    outStream_eos << 1;","    // printme(\"%s:Ended \\n\",__FUNCTION__);","}","","template <class SIZE_DT, int IN_WIDTH, int OUT_WIDTH>","void upsizer_sizestream(hls::stream<ap_uint<IN_WIDTH> >& inStream,","                        hls::stream<SIZE_DT>& inStreamSize,","                        hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                        hls::stream<SIZE_DT>& outStreamSize) {","    // Constants","    const int c_byte_width = 8; // 8bit is each BYTE","    const int c_upsize_factor = OUT_WIDTH / c_byte_width;","    const int c_in_size = IN_WIDTH / c_byte_width;","","    ap_uint<2 * OUT_WIDTH> outBuffer = 0; // Declaring double buffers","    uint32_t byteIdx = 0;","    // printme(\"%s: factor=%d\\n\",__FUNCTION__,c_upsize_factor);","    for (SIZE_DT size = inStreamSize.read(); size != 0; size = inStreamSize.read()) {","        // rounding off the output size","        uint16_t outSize = ((size + byteIdx) / c_upsize_factor) * c_upsize_factor;","        if (outSize) {","            outStreamSize << outSize;","        }","    ////printme(\"%s: reading next data=%d outSize=%d c_in_size=%d\\n \",__FUNCTION__, size,outSize,c_in_size);","    stream_upsizer:","        for (int i = 0; i < size; i += c_in_size) {","#pragma HLS PIPELINE II = 1","            int chunk_size = c_in_size;","            if (chunk_size + i > size) chunk_size = size - i;","            ap_uint<IN_WIDTH> tmpValue = inStream.read();","            outBuffer.range((byteIdx + c_in_size) * c_byte_width - 1, byteIdx * c_byte_width) = tmpValue;","            byteIdx += chunk_size;","            ////printme(\"%s: value=%c, chunk_size = %d and byteIdx=%d\\n\",__FUNCTION__,(char)tmpValue,","            /// chunk_size,byteIdx);","            if (byteIdx >= c_upsize_factor) {","                outStream << outBuffer.range(OUT_WIDTH - 1, 0);","                outBuffer >>= OUT_WIDTH;","                byteIdx -= c_upsize_factor;","            }","        }","    }","    if (byteIdx) {","        outStreamSize << byteIdx;","        ////printme(\"sent outSize %d \\n\", byteIdx);","        outStream << outBuffer.range(OUT_WIDTH - 1, 0);","    }","    // end of block","    outStreamSize << 0;","    // printme(\"%s:Ended \\n\",__FUNCTION__);","}","","template <int OUT_WIDTH, int PACK_WIDTH>","void streamUpsizerP2P(hls::stream<ap_uint<PACK_WIDTH> >& inStream,","                      hls::stream<ap_uint<OUT_WIDTH> >& outStream,","                      hls::stream<uint32_t>& inStreamSize,","                      hls::stream<uint32_t>& outStreamSize) {","    const int c_byte_width = 8;","    const int c_upsize_factor = OUT_WIDTH / c_byte_width;","    const int c_in_size = PACK_WIDTH / c_byte_width;","","    // Declaring double buffers","    ap_uint<2 * OUT_WIDTH> outBuffer = 0;","    uint32_t byteIdx = 0;","","    for (int size = inStreamSize.read(); size != 0; size = inStreamSize.read()) {","        // printf(\"Size %d \\n\", size);","        // Rounding off the output size","        uint32_t outSize = (size * c_byte_width + byteIdx) / PACK_WIDTH;","","        if (outSize) outStreamSize << outSize;","    streamUpsizer:","        for (int i = 0; i < size; i++) {","#pragma HLS PIPELINE II = 1","            // printf(\"val/size %d/%d \\n\", i, size);","            ap_uint<PACK_WIDTH> tmpValue = inStream.read();","            outBuffer.range((byteIdx + c_in_size) * c_byte_width - 1, byteIdx * c_byte_width) = tmpValue;","            byteIdx += c_byte_width;","","            if (byteIdx >= c_upsize_factor) {","                outStream << outBuffer.range(OUT_WIDTH - 1, 0);","                outBuffer >>= OUT_WIDTH;","                byteIdx -= c_upsize_factor;","            }","        }","    }","","    if (byteIdx) {","        outStreamSize << 1;","        outStream << outBuffer.range(OUT_WIDTH - 1, 0);","    }","    // printf(\"%s Done \\n\", __FUNCTION__);","    // end of block","    outStreamSize << 0;","}","","} // namespace details","} // namespace compression","} // namespace xf","","#endif // _XFCOMPRESSION_STREAM_UPSIZER_HPP_"],"stylingDirectives":[[{"start":0,"end":2,"cssClass":"pl-c"},{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":60,"cssClass":"pl-c"}],[{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":66,"cssClass":"pl-c"}],[{"start":0,"end":67,"cssClass":"pl-c"}],[{"start":0,"end":42,"cssClass":"pl-c"}],[{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":49,"cssClass":"pl-c"}],[{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":70,"cssClass":"pl-c"}],[{"start":0,"end":68,"cssClass":"pl-c"}],[{"start":0,"end":75,"cssClass":"pl-c"}],[{"start":0,"end":70,"cssClass":"pl-c"}],[{"start":0,"end":33,"cssClass":"pl-c"}],[{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":3,"cssClass":"pl-c"},{"start":1,"end":3,"cssClass":"pl-c"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"},{"start":8,"end":42,"cssClass":"pl-en"}],[],[{"start":0,"end":3,"cssClass":"pl-c"},{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":27,"cssClass":"pl-c"}],[{"start":0,"end":43,"cssClass":"pl-c"}],[{"start":0,"end":2,"cssClass":"pl-c"}],[{"start":0,"end":55,"cssClass":"pl-c"}],[{"start":0,"end":3,"cssClass":"pl-c"},{"start":1,"end":3,"cssClass":"pl-c"}],[],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":29,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":28,"end":29,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":23,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":22,"end":23,"cssClass":"pl-pds"}],[],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":19,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":18,"end":19,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":19,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":18,"end":19,"cssClass":"pl-pds"}],[{"start":1,"end":8,"cssClass":"pl-k"},{"start":9,"end":19,"cssClass":"pl-s"},{"start":9,"end":10,"cssClass":"pl-pds"},{"start":18,"end":19,"cssClass":"pl-pds"}],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":12,"cssClass":"pl-en"}],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":21,"cssClass":"pl-en"}],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":17,"cssClass":"pl-en"}],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":15,"cssClass":"pl-en"},{"start":56,"end":57,"cssClass":"pl-c1"}],[],[{"start":36,"end":38,"cssClass":"pl-c1"}],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":16,"end":21,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":15,"end":19,"cssClass":"pl-c1"}],[{"start":16,"end":18,"cssClass":"pl-c1"},{"start":31,"end":32,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":30,"end":34,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":36,"end":42,"cssClass":"pl-smi"},{"start":46,"end":47,"cssClass":"pl-c1"}],[],[{"start":8,"end":13,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":19,"end":24,"cssClass":"pl-c1"}],[{"start":35,"end":41,"cssClass":"pl-smi"},{"start":45,"end":46,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":32,"end":37,"cssClass":"pl-k"}],[{"start":31,"end":35,"cssClass":"pl-smi"},{"start":36,"end":37,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":22,"end":28,"cssClass":"pl-smi"},{"start":32,"end":33,"cssClass":"pl-c1"}],[{"start":33,"end":37,"cssClass":"pl-c1"}],[],[],[],[{"start":8,"end":65,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[],[],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":18,"cssClass":"pl-en"},{"start":60,"end":61,"cssClass":"pl-c1"}],[],[{"start":39,"end":41,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":21,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":21,"cssClass":"pl-c1"},{"start":45,"end":46,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":21,"cssClass":"pl-c1"}],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":16,"end":21,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":15,"end":19,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":25,"end":26,"cssClass":"pl-c1"}],[{"start":16,"end":18,"cssClass":"pl-c1"},{"start":31,"end":32,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":30,"end":34,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":36,"end":42,"cssClass":"pl-smi"},{"start":46,"end":47,"cssClass":"pl-c1"}],[],[{"start":8,"end":13,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":19,"end":24,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":16,"end":60,"cssClass":"pl-c"},{"start":16,"end":18,"cssClass":"pl-c"}],[],[{"start":26,"end":27,"cssClass":"pl-c1"}],[{"start":39,"end":45,"cssClass":"pl-smi"},{"start":49,"end":50,"cssClass":"pl-c1"}],[],[],[{"start":19,"end":24,"cssClass":"pl-c1"},{"start":38,"end":39,"cssClass":"pl-c1"},{"start":72,"end":76,"cssClass":"pl-smi"},{"start":77,"end":78,"cssClass":"pl-c1"}],[],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":22,"end":28,"cssClass":"pl-smi"},{"start":32,"end":33,"cssClass":"pl-c1"}],[{"start":33,"end":37,"cssClass":"pl-c1"}],[],[],[],[{"start":8,"end":65,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[],[],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"},{"start":39,"end":42,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":18,"cssClass":"pl-en"}],[{"start":31,"end":35,"cssClass":"pl-k"}],[{"start":31,"end":35,"cssClass":"pl-k"}],[],[{"start":31,"end":35,"cssClass":"pl-k"}],[{"start":31,"end":39,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"},{"start":32,"end":33,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"}],[],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":11,"end":12,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":33,"end":37,"cssClass":"pl-c1"}],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":23,"end":27,"cssClass":"pl-c1"},{"start":29,"end":34,"cssClass":"pl-k"}],[],[{"start":39,"end":40,"cssClass":"pl-c1"}],[{"start":8,"end":16,"cssClass":"pl-c1"},{"start":27,"end":28,"cssClass":"pl-c1"}],[{"start":8,"end":16,"cssClass":"pl-c1"},{"start":29,"end":30,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":24,"end":29,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[],[{"start":32,"end":37,"cssClass":"pl-c1"}],[],[{"start":16,"end":18,"cssClass":"pl-k"}],[],[{"start":32,"end":33,"cssClass":"pl-c1"}],[],[{"start":26,"end":27,"cssClass":"pl-c1"}],[],[{"start":49,"end":53,"cssClass":"pl-c1"}],[{"start":35,"end":39,"cssClass":"pl-c1"}],[{"start":22,"end":27,"cssClass":"pl-c1"},{"start":39,"end":40,"cssClass":"pl-c1"},{"start":55,"end":56,"cssClass":"pl-c1"}],[],[{"start":10,"end":15,"cssClass":"pl-k"},{"start":29,"end":34,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":35,"end":40,"cssClass":"pl-c1"}],[],[{"start":28,"end":32,"cssClass":"pl-c1"}],[],[],[],[],[{"start":21,"end":22,"cssClass":"pl-c1"}],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":24,"cssClass":"pl-en"}],[{"start":37,"end":41,"cssClass":"pl-k"}],[{"start":37,"end":45,"cssClass":"pl-c1"}],[{"start":37,"end":41,"cssClass":"pl-k"}],[],[{"start":37,"end":41,"cssClass":"pl-k"}],[{"start":45,"end":46,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"},{"start":32,"end":33,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":17,"cssClass":"pl-k"},{"start":38,"end":39,"cssClass":"pl-c1"}],[{"start":4,"end":12,"cssClass":"pl-c1"},{"start":27,"end":28,"cssClass":"pl-c1"}],[],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":11,"end":12,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":33,"end":37,"cssClass":"pl-c1"}],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":23,"end":27,"cssClass":"pl-c1"},{"start":29,"end":34,"cssClass":"pl-k"}],[],[{"start":39,"end":40,"cssClass":"pl-c1"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":26,"end":27,"cssClass":"pl-c1"}],[{"start":8,"end":16,"cssClass":"pl-c1"},{"start":28,"end":29,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":24,"end":29,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[],[],[],[{"start":32,"end":37,"cssClass":"pl-c1"}],[{"start":26,"end":27,"cssClass":"pl-c1"}],[],[{"start":49,"end":53,"cssClass":"pl-c1"}],[{"start":35,"end":39,"cssClass":"pl-c1"}],[{"start":22,"end":27,"cssClass":"pl-c1"},{"start":39,"end":40,"cssClass":"pl-c1"},{"start":55,"end":56,"cssClass":"pl-c1"}],[],[{"start":10,"end":15,"cssClass":"pl-k"},{"start":29,"end":34,"cssClass":"pl-c1"}],[],[{"start":8,"end":16,"cssClass":"pl-c1"},{"start":42,"end":46,"cssClass":"pl-c1"}],[{"start":8,"end":15,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":35,"end":40,"cssClass":"pl-c1"}],[],[],[{"start":28,"end":33,"cssClass":"pl-c1"}],[],[{"start":8,"end":56,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":25,"end":26,"cssClass":"pl-c1"}],[{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":24,"end":25,"cssClass":"pl-c1"}],[],[],[{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":17,"end":18,"cssClass":"pl-c1"}],[{"start":20,"end":21,"cssClass":"pl-c1"}],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"},{"start":39,"end":42,"cssClass":"pl-k"},{"start":57,"end":58,"cssClass":"pl-c1"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":24,"cssClass":"pl-en"},{"start":56,"end":57,"cssClass":"pl-c1"},{"start":70,"end":71,"cssClass":"pl-c1"}],[],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":21,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-k"},{"start":14,"end":21,"cssClass":"pl-c1"},{"start":45,"end":46,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":16,"end":21,"cssClass":"pl-c1"}],[{"start":12,"end":13,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":9,"cssClass":"pl-k"}],[{"start":15,"end":19,"cssClass":"pl-c1"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":26,"end":27,"cssClass":"pl-c1"}],[{"start":16,"end":17,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":32,"end":36,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":38,"end":44,"cssClass":"pl-smi"},{"start":48,"end":49,"cssClass":"pl-c1"}],[],[{"start":8,"end":13,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":19,"end":24,"cssClass":"pl-c1"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[],[],[{"start":23,"end":28,"cssClass":"pl-c1"},{"start":43,"end":44,"cssClass":"pl-c1"},{"start":46,"end":47,"cssClass":"pl-c1"}],[],[{"start":26,"end":27,"cssClass":"pl-c1"}],[{"start":24,"end":25,"cssClass":"pl-c1"}],[{"start":41,"end":47,"cssClass":"pl-smi"},{"start":51,"end":52,"cssClass":"pl-c1"}],[],[],[{"start":12,"end":15,"cssClass":"pl-k"},{"start":17,"end":24,"cssClass":"pl-c1"},{"start":29,"end":30,"cssClass":"pl-c1"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":16,"end":18,"cssClass":"pl-k"},{"start":32,"end":38,"cssClass":"pl-smi"},{"start":46,"end":51,"cssClass":"pl-c1"},{"start":58,"end":59,"cssClass":"pl-c1"},{"start":63,"end":64,"cssClass":"pl-c1"},{"start":68,"end":69,"cssClass":"pl-c1"},{"start":75,"end":76,"cssClass":"pl-c1"},{"start":88,"end":92,"cssClass":"pl-smi"}],[],[],[{"start":19,"end":24,"cssClass":"pl-c1"},{"start":37,"end":38,"cssClass":"pl-c1"}],[],[{"start":29,"end":35,"cssClass":"pl-smi"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":24,"end":30,"cssClass":"pl-smi"},{"start":34,"end":35,"cssClass":"pl-c1"},{"start":56,"end":60,"cssClass":"pl-c1"}],[],[{"start":8,"end":29,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":21,"end":22,"cssClass":"pl-c1"}],[],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":15,"cssClass":"pl-k"},{"start":16,"end":23,"cssClass":"pl-en"},{"start":25,"end":28,"cssClass":"pl-k"},{"start":39,"end":42,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":18,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":0,"end":77,"cssClass":"pl-c"}],[{"start":0,"end":77,"cssClass":"pl-c"}],[{"start":0,"end":20,"cssClass":"pl-c"}],[{"start":0,"end":6,"cssClass":"pl-c"}],[{"start":0,"end":49,"cssClass":"pl-c"}],[{"start":0,"end":40,"cssClass":"pl-c"}],[{"start":0,"end":42,"cssClass":"pl-c"}],[{"start":0,"end":6,"cssClass":"pl-c"}],[{"start":0,"end":35,"cssClass":"pl-c"}],[{"start":0,"end":37,"cssClass":"pl-c"}],[{"start":0,"end":48,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"},{"start":5,"end":7,"cssClass":"pl-c"}],[],[{"start":4,"end":6,"cssClass":"pl-k"},{"start":25,"end":26,"cssClass":"pl-c1"},{"start":28,"end":34,"cssClass":"pl-k"}],[],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":38,"end":39,"cssClass":"pl-c1"}],[],[{"start":4,"end":11,"cssClass":"pl-c1"}],[{"start":37,"end":38,"cssClass":"pl-c1"},{"start":57,"end":58,"cssClass":"pl-c1"}],[{"start":4,"end":12,"cssClass":"pl-c1"},{"start":55,"end":56,"cssClass":"pl-c1"},{"start":70,"end":71,"cssClass":"pl-c1"}],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":9,"end":17,"cssClass":"pl-c1"},{"start":22,"end":23,"cssClass":"pl-c1"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":17,"end":18,"cssClass":"pl-c1"},{"start":36,"end":37,"cssClass":"pl-c1"}],[],[{"start":29,"end":30,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"}],[{"start":27,"end":32,"cssClass":"pl-c1"},{"start":45,"end":46,"cssClass":"pl-c1"},{"start":81,"end":85,"cssClass":"pl-c1"}],[{"start":10,"end":14,"cssClass":"pl-k"}],[{"start":27,"end":32,"cssClass":"pl-c1"},{"start":45,"end":46,"cssClass":"pl-c1"},{"start":72,"end":73,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":17,"end":18,"cssClass":"pl-c1"},{"start":32,"end":33,"cssClass":"pl-c1"}],[],[{"start":4,"end":32,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":24,"end":27,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":15,"cssClass":"pl-en"}],[{"start":28,"end":32,"cssClass":"pl-k"}],[],[{"start":28,"end":32,"cssClass":"pl-k"}],[{"start":4,"end":7,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":0,"end":69,"cssClass":"pl-c"}],[{"start":0,"end":66,"cssClass":"pl-c"}],[{"start":0,"end":65,"cssClass":"pl-c"}],[{"start":0,"end":6,"cssClass":"pl-c"}],[{"start":0,"end":40,"cssClass":"pl-c"}],[{"start":0,"end":42,"cssClass":"pl-c"}],[{"start":0,"end":6,"cssClass":"pl-c"}],[{"start":0,"end":35,"cssClass":"pl-c"}],[{"start":0,"end":51,"cssClass":"pl-c"}],[{"start":0,"end":37,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"},{"start":5,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":16,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[],[{"start":35,"end":36,"cssClass":"pl-c1"}],[],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":4,"end":12,"cssClass":"pl-c1"},{"start":23,"end":24,"cssClass":"pl-c1"}],[{"start":4,"end":8,"cssClass":"pl-k"},{"start":16,"end":21,"cssClass":"pl-c1"}],[{"start":4,"end":106,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":38,"end":42,"cssClass":"pl-c1"}],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":9,"end":13,"cssClass":"pl-k"},{"start":38,"end":42,"cssClass":"pl-c1"},{"start":58,"end":63,"cssClass":"pl-c1"},{"start":89,"end":93,"cssClass":"pl-c1"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":16,"cssClass":"pl-k"},{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":22,"end":27,"cssClass":"pl-c1"},{"start":33,"end":34,"cssClass":"pl-c1"},{"start":52,"end":53,"cssClass":"pl-c1"}],[],[{"start":19,"end":20,"cssClass":"pl-c1"}],[{"start":8,"end":118,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":10,"cssClass":"pl-k"}],[],[{"start":29,"end":30,"cssClass":"pl-c1"}],[],[],[{"start":42,"end":46,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":6,"cssClass":"pl-k"}],[{"start":25,"end":26,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":19,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[],[{"start":17,"end":18,"cssClass":"pl-c1"}],[{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":4,"end":43,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":15,"cssClass":"pl-k"},{"start":16,"end":23,"cssClass":"pl-en"},{"start":25,"end":28,"cssClass":"pl-k"},{"start":39,"end":42,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":23,"cssClass":"pl-en"}],[],[],[],[{"start":4,"end":16,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":29,"end":30,"cssClass":"pl-c1"},{"start":32,"end":52,"cssClass":"pl-c"},{"start":32,"end":34,"cssClass":"pl-c"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[],[{"start":12,"end":13,"cssClass":"pl-c1"},{"start":39,"end":40,"cssClass":"pl-c1"},{"start":42,"end":69,"cssClass":"pl-c"},{"start":42,"end":44,"cssClass":"pl-c"}],[{"start":4,"end":12,"cssClass":"pl-c1"},{"start":23,"end":24,"cssClass":"pl-c1"}],[{"start":4,"end":63,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":37,"end":41,"cssClass":"pl-c1"},{"start":53,"end":54,"cssClass":"pl-c1"},{"start":76,"end":80,"cssClass":"pl-c1"}],[{"start":8,"end":39,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":16,"cssClass":"pl-c1"}],[{"start":8,"end":10,"cssClass":"pl-k"}],[],[],[{"start":4,"end":108,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":16,"cssClass":"pl-k"},{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":12,"end":15,"cssClass":"pl-k"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":50,"end":54,"cssClass":"pl-c1"}],[{"start":22,"end":27,"cssClass":"pl-c1"},{"start":67,"end":68,"cssClass":"pl-c1"}],[],[{"start":12,"end":101,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":12,"end":36,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":39,"end":44,"cssClass":"pl-c1"},{"start":57,"end":58,"cssClass":"pl-c1"},{"start":60,"end":61,"cssClass":"pl-c1"}],[],[],[],[],[],[{"start":4,"end":6,"cssClass":"pl-k"}],[],[{"start":8,"end":51,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":31,"end":36,"cssClass":"pl-c1"},{"start":49,"end":50,"cssClass":"pl-c1"},{"start":52,"end":53,"cssClass":"pl-c1"}],[],[{"start":4,"end":19,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":4,"end":43,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[],[],[{"start":0,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":25,"end":28,"cssClass":"pl-k"}],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":21,"cssClass":"pl-en"}],[],[{"start":34,"end":42,"cssClass":"pl-c1"}],[{"start":34,"end":42,"cssClass":"pl-c1"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"},{"start":29,"end":30,"cssClass":"pl-c1"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[{"start":4,"end":9,"cssClass":"pl-k"},{"start":10,"end":13,"cssClass":"pl-k"}],[],[{"start":4,"end":31,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":12,"end":13,"cssClass":"pl-c1"},{"start":39,"end":40,"cssClass":"pl-c1"}],[{"start":4,"end":12,"cssClass":"pl-c1"},{"start":23,"end":24,"cssClass":"pl-c1"}],[],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":9,"end":12,"cssClass":"pl-k"},{"start":33,"end":37,"cssClass":"pl-c1"},{"start":49,"end":50,"cssClass":"pl-c1"},{"start":72,"end":76,"cssClass":"pl-c1"}],[{"start":8,"end":38,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":39,"cssClass":"pl-c"},{"start":8,"end":10,"cssClass":"pl-c"}],[{"start":8,"end":16,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"}],[],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":16,"cssClass":"pl-k"},{"start":21,"end":22,"cssClass":"pl-c1"}],[{"start":1,"end":7,"cssClass":"pl-k"}],[{"start":12,"end":52,"cssClass":"pl-c"},{"start":12,"end":14,"cssClass":"pl-c"}],[{"start":52,"end":56,"cssClass":"pl-c1"}],[{"start":22,"end":27,"cssClass":"pl-c1"},{"start":67,"end":68,"cssClass":"pl-c1"}],[],[],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":39,"end":44,"cssClass":"pl-c1"},{"start":57,"end":58,"cssClass":"pl-c1"},{"start":60,"end":61,"cssClass":"pl-c1"}],[],[],[],[],[],[],[{"start":4,"end":6,"cssClass":"pl-k"}],[{"start":25,"end":26,"cssClass":"pl-c1"}],[{"start":31,"end":36,"cssClass":"pl-c1"},{"start":49,"end":50,"cssClass":"pl-c1"},{"start":52,"end":53,"cssClass":"pl-c1"}],[],[{"start":4,"end":42,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":4,"end":19,"cssClass":"pl-c"},{"start":4,"end":6,"cssClass":"pl-c"}],[{"start":21,"end":22,"cssClass":"pl-c1"}],[],[],[{"start":2,"end":22,"cssClass":"pl-c"},{"start":2,"end":4,"cssClass":"pl-c"}],[{"start":2,"end":26,"cssClass":"pl-c"},{"start":2,"end":4,"cssClass":"pl-c"}],[{"start":2,"end":17,"cssClass":"pl-c"},{"start":2,"end":4,"cssClass":"pl-c"}],[],[{"start":1,"end":6,"cssClass":"pl-k"},{"start":7,"end":44,"cssClass":"pl-c"},{"start":7,"end":9,"cssClass":"pl-c"}]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/Xilinx/Vitis_Libraries/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/Xilinx/Vitis_Libraries/security/dependabot","repoSecurityAndAnalysisPath":"/Xilinx/Vitis_Libraries/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"stream_upsizer.hpp","displayUrl":"https://github.com/Xilinx/Vitis_Libraries/blob/master/data_compression/L1/include/hw/stream_upsizer.hpp?raw=true","headerInfo":{"blobSize":"15.7 KB","deleteInfo":{"deletePath":null,"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"c31c5d5","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FXilinx%2FVitis_Libraries%2Fblob%2Fmaster%2Fdata_compression%2FL1%2Finclude%2Fhw%2Fstream_upsizer.hpp","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"455","truncatedSloc":"417"},"mode":"file"},"image":false,"isCodeownersFile":null,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"C++","large":false,"loggedIn":false,"newDiscussionPath":"/Xilinx/Vitis_Libraries/discussions/new","newIssuePath":"/Xilinx/Vitis_Libraries/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/Xilinx/Vitis_Libraries/blob/master/data_compression/L1/include/hw/stream_upsizer.hpp","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/Xilinx/Vitis_Libraries/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"Xilinx","repoName":"Vitis_Libraries","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":false,"symbols":[{"name":"sendBuffer","kind":"function","identStart":1060,"identEnd":1070,"extentStart":1060,"extentEnd":1237,"fullyQualifiedName":"sendBuffer","identUtf16":{"start":{"lineNumber":38,"utf16Col":5},"end":{"lineNumber":38,"utf16Col":15}},"extentUtf16":{"start":{"lineNumber":38,"utf16Col":5},"end":{"lineNumber":40,"utf16Col":51}}},{"name":"bufferUpsizer","kind":"function","identStart":1948,"identEnd":1961,"extentStart":1948,"extentEnd":2137,"fullyQualifiedName":"bufferUpsizer","identUtf16":{"start":{"lineNumber":67,"utf16Col":5},"end":{"lineNumber":67,"utf16Col":18}},"extentUtf16":{"start":{"lineNumber":67,"utf16Col":5},"end":{"lineNumber":69,"utf16Col":54}}},{"name":"simpleUpsizer","kind":"function","identStart":3354,"identEnd":3367,"extentStart":3354,"extentEnd":3683,"fullyQualifiedName":"simpleUpsizer","identUtf16":{"start":{"lineNumber":107,"utf16Col":5},"end":{"lineNumber":107,"utf16Col":18}},"extentUtf16":{"start":{"lineNumber":107,"utf16Col":5},"end":{"lineNumber":112,"utf16Col":56}}},{"name":"simpleStreamUpsizer","kind":"function","identStart":5050,"identEnd":5069,"extentStart":5050,"extentEnd":5480,"fullyQualifiedName":"simpleStreamUpsizer","identUtf16":{"start":{"lineNumber":156,"utf16Col":5},"end":{"lineNumber":156,"utf16Col":24}},"extentUtf16":{"start":{"lineNumber":156,"utf16Col":5},"end":{"lineNumber":162,"utf16Col":65}}},{"name":"simpleStreamUpsizer","kind":"function","identStart":6996,"identEnd":7015,"extentStart":6996,"extentEnd":7160,"fullyQualifiedName":"simpleStreamUpsizer","identUtf16":{"start":{"lineNumber":212,"utf16Col":5},"end":{"lineNumber":212,"utf16Col":24}},"extentUtf16":{"start":{"lineNumber":212,"utf16Col":5},"end":{"lineNumber":213,"utf16Col":83}}},{"name":"streamUpsizer","kind":"function","identStart":8684,"identEnd":8697,"extentStart":8684,"extentEnd":8846,"fullyQualifiedName":"streamUpsizer","identUtf16":{"start":{"lineNumber":259,"utf16Col":5},"end":{"lineNumber":259,"utf16Col":18}},"extentUtf16":{"start":{"lineNumber":259,"utf16Col":5},"end":{"lineNumber":261,"utf16Col":41}}},{"name":"upsizerEos","kind":"function","identStart":10235,"identEnd":10245,"extentStart":10235,"extentEnd":10448,"fullyQualifiedName":"upsizerEos","identUtf16":{"start":{"lineNumber":302,"utf16Col":5},"end":{"lineNumber":302,"utf16Col":15}},"extentUtf16":{"start":{"lineNumber":302,"utf16Col":5},"end":{"lineNumber":305,"utf16Col":49}}},{"name":"upsizer_sizestream","kind":"function","identStart":12409,"identEnd":12427,"extentStart":12409,"extentEnd":12660,"fullyQualifiedName":"upsizer_sizestream","identUtf16":{"start":{"lineNumber":360,"utf16Col":5},"end":{"lineNumber":360,"utf16Col":23}},"extentUtf16":{"start":{"lineNumber":360,"utf16Col":5},"end":{"lineNumber":363,"utf16Col":60}}},{"name":"streamUpsizerP2P","kind":"function","identStart":14461,"identEnd":14477,"extentStart":14461,"extentEnd":14708,"fullyQualifiedName":"streamUpsizerP2P","identUtf16":{"start":{"lineNumber":407,"utf16Col":5},"end":{"lineNumber":407,"utf16Col":21}},"extentUtf16":{"start":{"lineNumber":407,"utf16Col":5},"end":{"lineNumber":410,"utf16Col":59}}}]}},"copilotAccessInfo":null,"csrf_tokens":{"/Xilinx/Vitis_Libraries/branches":{"post":"kC-URYD4TLga7rfitPUteaJOYS1HMNWsags3Egyiv5EtwT9bR2imkMZhySQTj70kwQLRlPNoxRYlqtiTIbr4wg"}}},"title":"Vitis_Libraries/data_compression/L1/include/hw/stream_upsizer.hpp at master · Xilinx/Vitis_Libraries","locale":"en"}